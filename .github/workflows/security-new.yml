name: Security Scan

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'pom.xml'
      - 'src/**'
      - '.github/workflows/security.yml'
  schedule:
    # Run weekly on Sunday at 2 AM UTC
    - cron: '0 2 * * 0'
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      full_scan:
        description: 'Run full security scan (including OWASP & CodeQL)'
        required: false
        default: true
        type: boolean

permissions:
  contents: read
  security-events: write
  actions: read
  pull-requests: write

jobs:
  security:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}

    # Quick security checks - always run
    - name: Quick Security Analysis
      run: |
        echo "🔍 Running quick security checks..."

        # SpotBugs security check
        echo "Running SpotBugs security analysis..."
        mvn compile spotbugs:check \
          -Dspotbugs.effort=Max \
          -Dspotbugs.threshold=Low \
          -Dspotbugs.includeFilterFile=spotbugs-security.xml \
          -q || echo "SpotBugs completed with warnings"

        # Check for hardcoded secrets
        echo "Checking for potential hardcoded secrets..."
        if grep -r -E "(password|secret|key|token)\s*[:=]\s*['\"][^'\"]{8,}" src/ --include="*.java" --exclude-dir=test; then
          echo "⚠️  Potential hardcoded secrets found!"
          exit 1
        else
          echo "✅ No obvious hardcoded secrets detected"
        fi

        # Maven dependency analysis
        echo "Analyzing Maven dependencies..."
        mvn dependency:analyze -q

    # OWASP Dependency Check - only for scheduled runs, manual triggers, or pom.xml changes
    - name: Cache OWASP NVD database
      if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || contains(github.event.pull_request.changed_files, 'pom.xml')
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository/org/owasp/dependency-check-data
        key: ${{ runner.os }}-owasp-nvd-${{ github.run_number }}
        restore-keys: |
          ${{ runner.os }}-owasp-nvd-

    - name: OWASP Dependency Check
      if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || contains(github.event.pull_request.changed_files, 'pom.xml')
      run: |
        echo "🔍 Running OWASP Dependency Check..."
        # Use plugin version from pom.xml instead of command line
        if ! mvn dependency-check:check \
          -Dformat=HTML,JSON \
          -DsuppressionsFile=owasp-suppressions.xml \
          -DfailBuildOnCVSS=7 \
          -DnvdApiDatafeed=false \
          -DnvdMaxRetryCount=5 \
          -DnvdApiDelay=4000 \
          -DretireJsAnalyzerEnabled=false \
          -DnodeAnalyzerEnabled=false \
          -DenableRetired=false \
          -DenableExperimental=false; then
          echo "OWASP check failed, trying with local database only..."
          mvn dependency-check:check \
            -Dformat=HTML,JSON \
            -DsuppressionsFile=owasp-suppressions.xml \
            -DfailBuildOnCVSS=7 \
            -DnvdApiDatafeed=false \
            -DautoUpdate=false \
            -DretireJsAnalyzerEnabled=false \
            -DnodeAnalyzerEnabled=false \
            -DenableRetired=false \
            -DenableExperimental=false || echo "OWASP check failed - continuing with limited vulnerability data"
        fi

    - name: Upload OWASP results
      if: always() && (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || contains(github.event.pull_request.changed_files, 'pom.xml'))
      uses: actions/upload-artifact@v4
      with:
        name: owasp-report
        path: |
          target/dependency-check-report.html
          target/dependency-check-report.json

    # CodeQL Analysis - only for scheduled runs or manual triggers
    - name: Initialize CodeQL
      if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.full_scan == 'true')
      uses: github/codeql-action/init@v3
      with:
        languages: java
        queries: security-and-quality

    - name: Build for CodeQL
      if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.full_scan == 'true')
      run: mvn clean compile -DskipTests -q

    - name: Perform CodeQL Analysis
      if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.full_scan == 'true')
      uses: github/codeql-action/analyze@v3

    # Summary
    - name: Security Scan Summary
      if: always()
      run: |
        echo "## 🛡️ Security Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Checks Performed:" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ SpotBugs Security Analysis" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Hardcoded Secrets Check" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Maven Dependency Analysis" >> $GITHUB_STEP_SUMMARY

        if [[ "${{ github.event_name }}" == "schedule" || "${{ github.event_name }}" == "workflow_dispatch" || "${{ contains(github.event.pull_request.changed_files, 'pom.xml') }}" == "true" ]]; then
          echo "- ✅ OWASP Dependency Check" >> $GITHUB_STEP_SUMMARY
        else
          echo "- ⏭️ OWASP Dependency Check (skipped for PR)" >> $GITHUB_STEP_SUMMARY
        fi

        if [[ "${{ github.event_name }}" == "schedule" || ("${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.full_scan }}" == "true") ]]; then
          echo "- ✅ CodeQL Analysis" >> $GITHUB_STEP_SUMMARY
        else
          echo "- ⏭️ CodeQL Analysis (skipped for PR)" >> $GITHUB_STEP_SUMMARY
        fi
